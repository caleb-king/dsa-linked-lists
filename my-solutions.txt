constant time - O(1)
logarithmic time - O(log(n))
linear time - O(n)
polynomial time - O(n^k)
exponential time - O(2^n)

(See index.js for implementation of LinkedList class and supplemental functions)

Mystery program
    - What problem it is trying to solve?
        - This program removes duplicates from a linked list
    - polynomial time - O(n^k)
Reverse a list
    - linear time - O(n)
3rd from the end
    - linear time - O(n)
Middle of a list
    - linear time - O(n)
Cycle in a list
    - polynomial time - O(n^k)
Sorting a list
    - polynomial time - O(n^k)